/* 
 * Вообще в примере синтаксическая ошибка,
 * но если не учитывать ее то можно ожидать 
 * что будет лог в консоль 10 раз со значением 
 * от 0 до 9. Но из-за того что функция ссылается на переменную
 * которая к моменту его вызова будет уже равна 10,
 * то в консоль мы получим 10 раз лог со значением 10
 */

/*
 * Чтобы исправить это можно использовать let.
 * let создается отдельно для каждого scope (циклы и условаия и тд для let
 * тоже имеют scope).
 */
for (let i = 0; i < 10; i++) {
  setTimeout(function() {
    console.log(i);
  })
};

/*
 * Так же можно использовать возможность передачи 
 * аргументов для callback таймаута
 */
for (var i = 0; i < 10; i++) {
  setTimeout(function(i) {
    console.log(i);
  }, null, i)
};

/*
 * Или использовать IIFE, чтобы на каждом 
 * цикле вызываемая функция замыкала в себе 
 * значение текущего i
 */
for (let i = 0; i < 10; i++) {
  (function (i) {
    setTimeout(function() {
      console.log(i);
    })
  })(i)
};
